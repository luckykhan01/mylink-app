#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
"""
import requests
import json

BASE_URL = "http://localhost:8001"

def test_chat_without_resume():
    """–¢–µ—Å—Ç 1: –ß–∞—Ç –±–µ–∑ —Ä–µ–∑—é–º–µ - –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢ 1: –ß–∞—Ç –±–µ–∑ —Ä–µ–∑—é–º–µ")
    print("="*80)
    
    vacancy_text = """
    Senior Python Developer
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –æ—Ç 5 –ª–µ—Ç
    - Python, FastAPI, PostgreSQL
    - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ - B2+
    - –õ–æ–∫–∞—Ü–∏—è: –ú–æ—Å–∫–≤–∞
    - –ó–∞—Ä–ø–ª–∞—Ç–∞: 300000-400000 —Ä—É–±
    """
    
    # –ù–∞—á–∏–Ω–∞–µ–º —á–∞—Ç –ë–ï–ó —Ä–µ–∑—é–º–µ
    print("\nüì§ –ó–∞–ø—Ä–æ—Å: POST /chat/start (–±–µ–∑ —Ä–µ–∑—é–º–µ)")
    response = requests.post(
        f"{BASE_URL}/chat/start",
        json={
            "vacancy_text": vacancy_text,
            "cv_text": None  # –†–µ–∑—é–º–µ –Ω–µ—Ç!
        }
    )
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        print(response.text)
        return
    
    result = response.json()
    session_id = result["session_id"]
    
    print(f"\n‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {session_id}")
    print(f"üìä –≠—Ç–∞–ø –¥–∏–∞–ª–æ–≥–∞: {result['dialog_stage']}")
    print(f"üìà –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result['relevance_percent']}%")
    print(f"\nü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {result['bot_reply']}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥
    candidate_answers = [
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
        "–Ø Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
        "–£ –º–µ–Ω—è 3 –≥–æ–¥–∞ –æ–ø—ã—Ç–∞",
        "–Ø –∂–∏–≤—É –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ",
        "–Ø –∑–∞–∫–æ–Ω—á–∏–ª –ò–¢–ú–û –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è",
        "Python, Django, REST API, PostgreSQL",
        "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π - B1, —Ä—É—Å—Å–∫–∏–π - —Ä–æ–¥–Ω–æ–π",
        "–Ø –æ–∂–∏–¥–∞—é –∑–∞—Ä–ø–ª–∞—Ç—É –æ–∫–æ–ª–æ 350000 —Ä—É–±–ª–µ–π",
        "–ú–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å, –≥–æ—Ç–æ–≤ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É"
    ]
    
    for i, answer in enumerate(candidate_answers):
        print(f"\n--- –í–æ–ø—Ä–æ—Å {i+1} ---")
        print(f"üë§ –ö–∞–Ω–¥–∏–¥–∞—Ç: {answer}")
        
        response = requests.post(
            f"{BASE_URL}/chat/turn",
            json={
                "session_id": session_id,
                "message_from_candidate": answer
            }
        )
        
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            break
        
        result = response.json()
        print(f"üìä –≠—Ç–∞–ø: {result['dialog_stage']}")
        print(f"üìà –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result['relevance_percent']}%")
        print(f"ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {result['bot_reply']}")
        
        if result['is_completed']:
            print("\n‚úÖ –î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            break
        
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –¥–∏–∞–ª–æ–≥ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã
        if i >= 15:  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            print("\n‚ö†Ô∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∏—Ç–µ—Ä–∞—Ü–∏–π")
            break

def test_chat_with_resume():
    """–¢–µ—Å—Ç 2: –ß–∞—Ç —Å —Ä–µ–∑—é–º–µ - –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω —Å—Ä–∞–∑—É –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è—Ö"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢ 2: –ß–∞—Ç —Å —Ä–µ–∑—é–º–µ")
    print("="*80)
    
    vacancy_text = """
    Senior Python Developer
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –æ—Ç 5 –ª–µ—Ç
    - Python, FastAPI, PostgreSQL
    - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ - B2+
    - –õ–æ–∫–∞—Ü–∏—è: –ú–æ—Å–∫–≤–∞
    - –ó–∞—Ä–ø–ª–∞—Ç–∞: 300000-400000 —Ä—É–±
    """
    
    cv_text = """
    –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤
    Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫
    –û–ø—ã—Ç: 3 –≥–æ–¥–∞
    –ì–æ—Ä–æ–¥: –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
    
    –ù–∞–≤—ã–∫–∏: Python, Django, REST API, PostgreSQL
    –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: –ò–¢–ú–û, –ø—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è
    –Ø–∑—ã–∫–∏: —Ä—É—Å—Å–∫–∏–π (—Ä–æ–¥–Ω–æ–π), –∞–Ω–≥–ª–∏–π—Å–∫–∏–π (B1)
    –ó–∞—Ä–ø–ª–∞—Ç–∞: 350000 —Ä—É–±
    –§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã: –ø–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å, —É–¥–∞–ª–µ–Ω–Ω–æ
    """
    
    print("\nüì§ –ó–∞–ø—Ä–æ—Å: POST /chat/start (—Å —Ä–µ–∑—é–º–µ)")
    response = requests.post(
        f"{BASE_URL}/chat/start",
        json={
            "vacancy_text": vacancy_text,
            "cv_text": cv_text  # –†–µ–∑—é–º–µ –µ—Å—Ç—å!
        }
    )
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        print(response.text)
        return
    
    result = response.json()
    session_id = result["session_id"]
    
    print(f"\n‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {session_id}")
    print(f"üìä –≠—Ç–∞–ø –¥–∏–∞–ª–æ–≥–∞: {result['dialog_stage']}")
    print(f"üìà –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result['relevance_percent']}%")
    print(f"üìù –ü—Ä–∏—á–∏–Ω—ã –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π: {result['reasons']}")
    print(f"\nü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {result['bot_reply']}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–æ–≤
    candidate_answers = [
        "–î–∞, —è –≥–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–µ–∑–¥—É –≤ –ú–æ—Å–∫–≤—É –∏–ª–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é —É–¥–∞–ª–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É",
        "–•–æ—Ç—è —É –º–µ–Ω—è 3 –≥–æ–¥–∞ –æ–ø—ã—Ç–∞, —è —Ä–∞–±–æ—Ç–∞–ª –Ω–∞–¥ –∫—Ä—É–ø–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –∏–º–µ—é –æ–ø—ã—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –∫–æ–º–∞–Ω–¥–æ–π",
        "–Ø –∞–∫—Ç–∏–≤–Ω–æ –∏–∑—É—á–∞—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ –≥–æ—Ç–æ–≤ —Å–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è",
        "–î–∞, —è –≥–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å —É—Å–ª–æ–≤–∏—è",
        "–ú–æ–∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ —Ü–µ–ª–∏ - —Å—Ç–∞—Ç—å —Ç–∏–º–ª–∏–¥–æ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –ª–µ—Ç",
        "–î–∞, –≥–æ—Ç–æ–≤ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–ª–æ–∫–∞—Ü–∏—é –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É"
    ]
    
    for i, answer in enumerate(candidate_answers):
        print(f"\n--- –í–æ–ø—Ä–æ—Å {i+1} ---")
        print(f"üë§ –ö–∞–Ω–¥–∏–¥–∞—Ç: {answer}")
        
        response = requests.post(
            f"{BASE_URL}/chat/turn",
            json={
                "session_id": session_id,
                "message_from_candidate": answer
            }
        )
        
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            break
        
        result = response.json()
        print(f"üìä –≠—Ç–∞–ø: {result['dialog_stage']}")
        print(f"üìà –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result['relevance_percent']}%")
        print(f"ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {result['bot_reply']}")
        
        if result['is_completed']:
            print("\n‚úÖ –î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            print(f"\nüìã –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è:")
            print(result['summary_for_employer'])
            break

if __name__ == "__main__":
    print("\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8001")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        response = requests.get(f"{BASE_URL}/docs")
        if response.status_code == 200:
            print("‚úÖ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ö†Ô∏è AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –¥–æ–ª–∂–Ω—ã–º –æ–±—Ä–∞–∑–æ–º")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É: {e}")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd ai-assistent && python main.py")
        exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_chat_without_resume()
    test_chat_with_resume()
    
    print("\n" + "="*80)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("="*80)

